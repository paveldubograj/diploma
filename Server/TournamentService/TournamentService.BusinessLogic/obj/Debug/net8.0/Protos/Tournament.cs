// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/tournament.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentService.BusinessLogic.Protos {

  /// <summary>Holder for reflection information generated from Protos/tournament.proto</summary>
  public static partial class TournamentReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/tournament.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TournamentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90b3MvdG91cm5hbWVudC5wcm90bxIEZ3JwYxobZ29vZ2xlL3Byb3Rv",
            "YnVmL2VtcHR5LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8iHAoOR2V0QnlJ",
            "ZFJlcXVlc3QSCgoCSWQYASABKAkiNwoRR2V0QnlSb3VuZFJlcXVlc3QSDAoE",
            "TmFtZRgBIAEoCRIUCgx0b3VybmFtZW50SWQYAiABKAkiMQoRQWRkTWF0Y2hl",
            "c1JlcXVlc3QSHAoHbWF0Y2hlcxgBIAMoCzILLmdycGMuTWF0Y2gipgMKBU1h",
            "dGNoEgoKAmlkGAEgASgJEg0KBXJvdW5kGAIgASgJEi0KCXN0YXJ0VGltZRgD",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDgoGc3RhdHVzGAQg",
            "ASgFEhIKCm1hdGNoT3JkZXIYBSABKAUSEAoId2luU2NvcmUYBiABKAUSEgoK",
            "bG9vc2VTY29yZRgHIAEoBRIrCgdlbmRUaW1lGAggASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBISCgpjYXRlZ29yeUlkGAkgASgJEhAKCHdpbm5l",
            "cklkGAogASgJEhYKDnBhcnRpY2lwYW50MUlkGAsgASgJEhYKDnBhcnRpY2lw",
            "YW50MklkGAwgASgJEhQKDHRvdXJuYW1lbnRJZBgNIAEoCRITCgtuZXh0TWF0",
            "Y2hJZBgOIAEoCRIPCgdvd25lcklkGA8gASgJEhgKEHBhcnRpY2lwYW50MU5h",
            "bWUYECABKAkSGAoQcGFydGljaXBhbnQyTmFtZRgRIAEoCRIWCg50b3VybmFt",
            "ZW50TmFtZRgSIAEoCTL1AQoRVG91cm5hbWVudFNlcnZpY2USQAoNQ3JlYXRl",
            "TWF0Y2hlcxIXLmdycGMuQWRkTWF0Y2hlc1JlcXVlc3QaFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkSMQoMR2V0TWF0Y2hCeUlkEhQuZ3JwYy5HZXRCeUlkUmVx",
            "dWVzdBoLLmdycGMuTWF0Y2gSNwoPR2V0TWF0Y2hCeVJvdW5kEhcuZ3JwYy5H",
            "ZXRCeVJvdW5kUmVxdWVzdBoLLmdycGMuTWF0Y2gSMgoLVXBkYXRlTWF0Y2gS",
            "Cy5ncnBjLk1hdGNoGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5QimqAiZUb3Vy",
            "bmFtZW50U2VydmljZS5CdXNpbmVzc0xvZ2ljLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentService.BusinessLogic.Protos.GetByIdRequest), global::TournamentService.BusinessLogic.Protos.GetByIdRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentService.BusinessLogic.Protos.GetByRoundRequest), global::TournamentService.BusinessLogic.Protos.GetByRoundRequest.Parser, new[]{ "Name", "TournamentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentService.BusinessLogic.Protos.AddMatchesRequest), global::TournamentService.BusinessLogic.Protos.AddMatchesRequest.Parser, new[]{ "Matches" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentService.BusinessLogic.Protos.Match), global::TournamentService.BusinessLogic.Protos.Match.Parser, new[]{ "Id", "Round", "StartTime", "Status", "MatchOrder", "WinScore", "LooseScore", "EndTime", "CategoryId", "WinnerId", "Participant1Id", "Participant2Id", "TournamentId", "NextMatchId", "OwnerId", "Participant1Name", "Participant2Name", "TournamentName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetByIdRequest : pb::IMessage<GetByIdRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetByIdRequest> _parser = new pb::MessageParser<GetByIdRequest>(() => new GetByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentService.BusinessLogic.Protos.TournamentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetByIdRequest(GetByIdRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetByIdRequest Clone() {
      return new GetByIdRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetByRoundRequest : pb::IMessage<GetByRoundRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetByRoundRequest> _parser = new pb::MessageParser<GetByRoundRequest>(() => new GetByRoundRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetByRoundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentService.BusinessLogic.Protos.TournamentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetByRoundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetByRoundRequest(GetByRoundRequest other) : this() {
      name_ = other.name_;
      tournamentId_ = other.tournamentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetByRoundRequest Clone() {
      return new GetByRoundRequest(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tournamentId" field.</summary>
    public const int TournamentIdFieldNumber = 2;
    private string tournamentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TournamentId {
      get { return tournamentId_; }
      set {
        tournamentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetByRoundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetByRoundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (TournamentId != other.TournamentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (TournamentId.Length != 0) hash ^= TournamentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (TournamentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TournamentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (TournamentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TournamentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (TournamentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TournamentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetByRoundRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.TournamentId.Length != 0) {
        TournamentId = other.TournamentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            TournamentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            TournamentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AddMatchesRequest : pb::IMessage<AddMatchesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddMatchesRequest> _parser = new pb::MessageParser<AddMatchesRequest>(() => new AddMatchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddMatchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentService.BusinessLogic.Protos.TournamentReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMatchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMatchesRequest(AddMatchesRequest other) : this() {
      matches_ = other.matches_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddMatchesRequest Clone() {
      return new AddMatchesRequest(this);
    }

    /// <summary>Field number for the "matches" field.</summary>
    public const int MatchesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TournamentService.BusinessLogic.Protos.Match> _repeated_matches_codec
        = pb::FieldCodec.ForMessage(10, global::TournamentService.BusinessLogic.Protos.Match.Parser);
    private readonly pbc::RepeatedField<global::TournamentService.BusinessLogic.Protos.Match> matches_ = new pbc::RepeatedField<global::TournamentService.BusinessLogic.Protos.Match>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentService.BusinessLogic.Protos.Match> Matches {
      get { return matches_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddMatchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddMatchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!matches_.Equals(other.matches_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= matches_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      matches_.WriteTo(output, _repeated_matches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      matches_.WriteTo(ref output, _repeated_matches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += matches_.CalculateSize(_repeated_matches_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddMatchesRequest other) {
      if (other == null) {
        return;
      }
      matches_.Add(other.matches_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            matches_.AddEntriesFrom(input, _repeated_matches_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            matches_.AddEntriesFrom(ref input, _repeated_matches_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Match : pb::IMessage<Match>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Match> _parser = new pb::MessageParser<Match>(() => new Match());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Match> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentService.BusinessLogic.Protos.TournamentReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match(Match other) : this() {
      id_ = other.id_;
      round_ = other.round_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      status_ = other.status_;
      matchOrder_ = other.matchOrder_;
      winScore_ = other.winScore_;
      looseScore_ = other.looseScore_;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      categoryId_ = other.categoryId_;
      winnerId_ = other.winnerId_;
      participant1Id_ = other.participant1Id_;
      participant2Id_ = other.participant2Id_;
      tournamentId_ = other.tournamentId_;
      nextMatchId_ = other.nextMatchId_;
      ownerId_ = other.ownerId_;
      participant1Name_ = other.participant1Name_;
      participant2Name_ = other.participant2Name_;
      tournamentName_ = other.tournamentName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match Clone() {
      return new Match(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 2;
    private string round_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Round {
      get { return round_; }
      set {
        round_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "matchOrder" field.</summary>
    public const int MatchOrderFieldNumber = 5;
    private int matchOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MatchOrder {
      get { return matchOrder_; }
      set {
        matchOrder_ = value;
      }
    }

    /// <summary>Field number for the "winScore" field.</summary>
    public const int WinScoreFieldNumber = 6;
    private int winScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WinScore {
      get { return winScore_; }
      set {
        winScore_ = value;
      }
    }

    /// <summary>Field number for the "looseScore" field.</summary>
    public const int LooseScoreFieldNumber = 7;
    private int looseScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LooseScore {
      get { return looseScore_; }
      set {
        looseScore_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 9;
    private string categoryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "winnerId" field.</summary>
    public const int WinnerIdFieldNumber = 10;
    private string winnerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WinnerId {
      get { return winnerId_; }
      set {
        winnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant1Id" field.</summary>
    public const int Participant1IdFieldNumber = 11;
    private string participant1Id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Participant1Id {
      get { return participant1Id_; }
      set {
        participant1Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant2Id" field.</summary>
    public const int Participant2IdFieldNumber = 12;
    private string participant2Id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Participant2Id {
      get { return participant2Id_; }
      set {
        participant2Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tournamentId" field.</summary>
    public const int TournamentIdFieldNumber = 13;
    private string tournamentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TournamentId {
      get { return tournamentId_; }
      set {
        tournamentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nextMatchId" field.</summary>
    public const int NextMatchIdFieldNumber = 14;
    private string nextMatchId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextMatchId {
      get { return nextMatchId_; }
      set {
        nextMatchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 15;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant1Name" field.</summary>
    public const int Participant1NameFieldNumber = 16;
    private string participant1Name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Participant1Name {
      get { return participant1Name_; }
      set {
        participant1Name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant2Name" field.</summary>
    public const int Participant2NameFieldNumber = 17;
    private string participant2Name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Participant2Name {
      get { return participant2Name_; }
      set {
        participant2Name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tournamentName" field.</summary>
    public const int TournamentNameFieldNumber = 18;
    private string tournamentName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TournamentName {
      get { return tournamentName_; }
      set {
        tournamentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Match);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Match other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Round != other.Round) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (Status != other.Status) return false;
      if (MatchOrder != other.MatchOrder) return false;
      if (WinScore != other.WinScore) return false;
      if (LooseScore != other.LooseScore) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (CategoryId != other.CategoryId) return false;
      if (WinnerId != other.WinnerId) return false;
      if (Participant1Id != other.Participant1Id) return false;
      if (Participant2Id != other.Participant2Id) return false;
      if (TournamentId != other.TournamentId) return false;
      if (NextMatchId != other.NextMatchId) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Participant1Name != other.Participant1Name) return false;
      if (Participant2Name != other.Participant2Name) return false;
      if (TournamentName != other.TournamentName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Round.Length != 0) hash ^= Round.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (MatchOrder != 0) hash ^= MatchOrder.GetHashCode();
      if (WinScore != 0) hash ^= WinScore.GetHashCode();
      if (LooseScore != 0) hash ^= LooseScore.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (CategoryId.Length != 0) hash ^= CategoryId.GetHashCode();
      if (WinnerId.Length != 0) hash ^= WinnerId.GetHashCode();
      if (Participant1Id.Length != 0) hash ^= Participant1Id.GetHashCode();
      if (Participant2Id.Length != 0) hash ^= Participant2Id.GetHashCode();
      if (TournamentId.Length != 0) hash ^= TournamentId.GetHashCode();
      if (NextMatchId.Length != 0) hash ^= NextMatchId.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (Participant1Name.Length != 0) hash ^= Participant1Name.GetHashCode();
      if (Participant2Name.Length != 0) hash ^= Participant2Name.GetHashCode();
      if (TournamentName.Length != 0) hash ^= TournamentName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Round.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Round);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (MatchOrder != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MatchOrder);
      }
      if (WinScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(WinScore);
      }
      if (LooseScore != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LooseScore);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (CategoryId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CategoryId);
      }
      if (WinnerId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(WinnerId);
      }
      if (Participant1Id.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Participant1Id);
      }
      if (Participant2Id.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Participant2Id);
      }
      if (TournamentId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TournamentId);
      }
      if (NextMatchId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(NextMatchId);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(OwnerId);
      }
      if (Participant1Name.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Participant1Name);
      }
      if (Participant2Name.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Participant2Name);
      }
      if (TournamentName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TournamentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Round.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Round);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (MatchOrder != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MatchOrder);
      }
      if (WinScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(WinScore);
      }
      if (LooseScore != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LooseScore);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (CategoryId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CategoryId);
      }
      if (WinnerId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(WinnerId);
      }
      if (Participant1Id.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Participant1Id);
      }
      if (Participant2Id.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Participant2Id);
      }
      if (TournamentId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TournamentId);
      }
      if (NextMatchId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(NextMatchId);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(OwnerId);
      }
      if (Participant1Name.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Participant1Name);
      }
      if (Participant2Name.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Participant2Name);
      }
      if (TournamentName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TournamentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Round.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Round);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (MatchOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchOrder);
      }
      if (WinScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinScore);
      }
      if (LooseScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LooseScore);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (CategoryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryId);
      }
      if (WinnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WinnerId);
      }
      if (Participant1Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Participant1Id);
      }
      if (Participant2Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Participant2Id);
      }
      if (TournamentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TournamentId);
      }
      if (NextMatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextMatchId);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Participant1Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Participant1Name);
      }
      if (Participant2Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Participant2Name);
      }
      if (TournamentName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TournamentName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Match other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Round.Length != 0) {
        Round = other.Round;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.MatchOrder != 0) {
        MatchOrder = other.MatchOrder;
      }
      if (other.WinScore != 0) {
        WinScore = other.WinScore;
      }
      if (other.LooseScore != 0) {
        LooseScore = other.LooseScore;
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.CategoryId.Length != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.WinnerId.Length != 0) {
        WinnerId = other.WinnerId;
      }
      if (other.Participant1Id.Length != 0) {
        Participant1Id = other.Participant1Id;
      }
      if (other.Participant2Id.Length != 0) {
        Participant2Id = other.Participant2Id;
      }
      if (other.TournamentId.Length != 0) {
        TournamentId = other.TournamentId;
      }
      if (other.NextMatchId.Length != 0) {
        NextMatchId = other.NextMatchId;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.Participant1Name.Length != 0) {
        Participant1Name = other.Participant1Name;
      }
      if (other.Participant2Name.Length != 0) {
        Participant2Name = other.Participant2Name;
      }
      if (other.TournamentName.Length != 0) {
        TournamentName = other.TournamentName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Round = input.ReadString();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 40: {
            MatchOrder = input.ReadInt32();
            break;
          }
          case 48: {
            WinScore = input.ReadInt32();
            break;
          }
          case 56: {
            LooseScore = input.ReadInt32();
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 74: {
            CategoryId = input.ReadString();
            break;
          }
          case 82: {
            WinnerId = input.ReadString();
            break;
          }
          case 90: {
            Participant1Id = input.ReadString();
            break;
          }
          case 98: {
            Participant2Id = input.ReadString();
            break;
          }
          case 106: {
            TournamentId = input.ReadString();
            break;
          }
          case 114: {
            NextMatchId = input.ReadString();
            break;
          }
          case 122: {
            OwnerId = input.ReadString();
            break;
          }
          case 130: {
            Participant1Name = input.ReadString();
            break;
          }
          case 138: {
            Participant2Name = input.ReadString();
            break;
          }
          case 146: {
            TournamentName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Round = input.ReadString();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 40: {
            MatchOrder = input.ReadInt32();
            break;
          }
          case 48: {
            WinScore = input.ReadInt32();
            break;
          }
          case 56: {
            LooseScore = input.ReadInt32();
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 74: {
            CategoryId = input.ReadString();
            break;
          }
          case 82: {
            WinnerId = input.ReadString();
            break;
          }
          case 90: {
            Participant1Id = input.ReadString();
            break;
          }
          case 98: {
            Participant2Id = input.ReadString();
            break;
          }
          case 106: {
            TournamentId = input.ReadString();
            break;
          }
          case 114: {
            NextMatchId = input.ReadString();
            break;
          }
          case 122: {
            OwnerId = input.ReadString();
            break;
          }
          case 130: {
            Participant1Name = input.ReadString();
            break;
          }
          case 138: {
            Participant2Name = input.ReadString();
            break;
          }
          case 146: {
            TournamentName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
